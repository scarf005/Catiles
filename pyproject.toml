[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bn-tileset-tools"
description = 'Cataclysm: Bright Nights Tileset Tools'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = [ "cataclysm", "Bright Nights", "image" ]
authors = [
  { name = "scarf", email = "greenscarf005@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/scarf005/bn-tileset-tools#readme"
Issues = "https://github.com/scarf005/bn-tileset-tools/issues"
Source = "https://github.com/scarf005/bn-tileset-tools"

[project.scripts]
bntools = "tileset_tools.main:app"

[tool.hatch.version]
path = "tileset_tools/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "msgspec",
  "flupy>=1.2.0",
  "rich",
  "typer",
]

[tool.hatch.envs.test]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-parallel",
]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black",
  "mypy",
]

[tool.hatch.envs.default.scripts]
test = "pytest"
test-parallel = "pytest --workers auto"
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=tileset_tools --cov=tests"
no-cov = "cov --no-cov"
lint = "black tileset_tools"
type = "dmypy check tileset_tools"

[[tool.hatch.envs.test.matrix]]
python = ["310", "311"]

[tool.hatch.build.targets.sdist]
include = [
  "/tileset_tools", "/*.md", "LICENSE.txt"
]

[tool.hatch.build.targets.wheel]
packages = ["tileset_tools"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "tileset_tools/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
line-length = 80
target-version = ["py310"]
